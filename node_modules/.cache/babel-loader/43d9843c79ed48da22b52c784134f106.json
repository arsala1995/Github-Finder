{"ast":null,"code":"import _objectSpread from\"/home/sher/lighthouse/postgrad/github-Finder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _regeneratorRuntime from\"/home/sher/lighthouse/postgrad/github-Finder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/sher/lighthouse/postgrad/github-Finder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/sher/lighthouse/postgrad/github-Finder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment,useState}from'react';import{BrowserRouter as Router,Switch,Route}from'react-router-dom';import NavBar from'./components/layout/NavBar';import Users from'./components/users/Users';import User from'./components/users/User';import Search from'./components/users/Search';import Alert from'./components/layout/Alert';import'./App.css';import About from\"./components/pages/About\";import axios from'axios';var App=function App(){//initial states for users and loading\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),users=_useState2[0],setUsers=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),user=_useState4[0],setUser=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),repos=_useState6[0],setRepos=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),loading=_useState8[0],setLoading=_useState8[1];var _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),alert=_useState10[0],setAlert=_useState10[1];var githubClientId;var githubClientSecret;if(process.env.NODE_ENV!=='production'){githubClientId=process.env.REACT_APP_GITHUB_CLIENT_ID;githubClientSecret=process.env.REACT_APP_GITHUB_CLIENT_SECRET;}else{githubClientId=process.env.GITHUB_CLIENT_ID;githubClientSecret=process.env.GITHUB_CLIENT_SECRET;}//search github users function that is passed to search file as props\nvar searchUsers=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(text){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setLoading(true);//fetches data from the github api\n_context.next=3;return axios.get(\"https://api.github.com/search/users?q=\".concat(text,\"&client_id=\").concat(githubClientId,\"&client_secret=\").concat(githubClientSecret));case 3:res=_context.sent;// //the state will be set as soon as the data is received.\nsetUsers(res.data.items);setLoading(false);case 6:case\"end\":return _context.stop();}}},_callee);}));return function searchUsers(_x){return _ref.apply(this,arguments);};}();//Get single github user using user's login name or username and the information will be passed as props to the user file\nvar getUser=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(username){var res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setLoading(true);//fetches data from the github api\n_context2.next=3;return axios.get(\"https://api.github.com/users/\".concat(username,\"?client_id=\").concat(githubClientId,\"&client_secret=\").concat(githubClientSecret));case 3:res=_context2.sent;// //the state will be set as soon as the data is received.\nsetUser(res.data);setLoading(false);case 6:case\"end\":return _context2.stop();}}},_callee2);}));return function getUser(_x2){return _ref2.apply(this,arguments);};}();// Get users repos\nvar getUserRepos=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(username){var res;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:setLoading(true);//fetches data from the github api\n_context3.next=3;return axios.get(\"https://api.github.com/users/\".concat(username,\"/repos?per_page=5&sort=created:asc&client_id=\").concat(githubClientId,\"&client_secret=\").concat(githubClientSecret));case 3:res=_context3.sent;// //the state will be set as soon as the data is received.\nsetRepos(res.data);setLoading(false);case 6:case\"end\":return _context3.stop();}}},_callee3);}));return function getUserRepos(_x3){return _ref3.apply(this,arguments);};}();//clear users from state\nvar clearUsers=function clearUsers(){setUsers([]);setLoading(false);};// set alert if nothing is typed\nvar showAlert=function showAlert(msg,type){setAlert({msg:msg,type:type});// Timeout to remove alert message after five seconds\nsetTimeout(function(){return setAlert(null);},5000);};return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(NavBar,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(Alert,{alert:alert}),/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",render:function render(props){return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(Search,{searchUsers:searchUsers,clearUsers:clearUsers,showClear:users.length>0?true:false,setAlert:showAlert}),/*#__PURE__*/_jsx(Users,{loading:loading,users:users})]});}}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/about\",component:About}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/user/:login\",render:function render(props){return/*#__PURE__*/_jsx(User,_objectSpread(_objectSpread({},props),{},{getUser:getUser,getUserRepos:getUserRepos,user:user,repos:repos,loading:loading}));}})]})]})]})});};export default App;","map":{"version":3,"sources":["/home/sher/lighthouse/postgrad/github-Finder/src/App.js"],"names":["React","Fragment","useState","BrowserRouter","Router","Switch","Route","NavBar","Users","User","Search","Alert","About","axios","App","users","setUsers","user","setUser","repos","setRepos","loading","setLoading","alert","setAlert","githubClientId","githubClientSecret","process","env","NODE_ENV","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","GITHUB_CLIENT_ID","GITHUB_CLIENT_SECRET","searchUsers","text","get","res","data","items","getUser","username","getUserRepos","clearUsers","showAlert","msg","type","setTimeout","props","length"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport NavBar from './components/layout/NavBar'\nimport Users from './components/users/Users'\nimport User from './components/users/User'\nimport Search from './components/users/Search'\nimport Alert from './components/layout/Alert'\nimport './App.css';\nimport About from \"./components/pages/About\"\nimport axios from 'axios'\n\n\nconst App = () => {\n\n  //initial states for users and loading\n  const [users, setUsers] = useState([]);\n  const [user, setUser] = useState({});\n  const [repos, setRepos] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [alert, setAlert] = useState(null);\n\n  let githubClientId;\n  let githubClientSecret;\n\n  if(process.env.NODE_ENV !== 'production') {\n    githubClientId = process.env.REACT_APP_GITHUB_CLIENT_ID;\n    githubClientSecret = process.env.REACT_APP_GITHUB_CLIENT_SECRET;\n\n  } else {\n    githubClientId = process.env.GITHUB_CLIENT_ID;\n    githubClientSecret = process.env.GITHUB_CLIENT_SECRET;\n  }\n\n  //search github users function that is passed to search file as props\n  const searchUsers = async (text) => {\n\n    setLoading(true);\n    //fetches data from the github api\n    const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${githubClientId}&client_secret=${githubClientSecret}`);\n    \n    // //the state will be set as soon as the data is received.\n    setUsers(res.data.items)\n    setLoading(false)\n  };\n\n  //Get single github user using user's login name or username and the information will be passed as props to the user file\n  const getUser = async (username) => {\n    setLoading(true);\n    //fetches data from the github api\n    const res = await axios.get(`https://api.github.com/users/${username}?client_id=${githubClientId}&client_secret=${githubClientSecret}`);\n    \n    // //the state will be set as soon as the data is received.\n    setUser(res.data);\n    setLoading(false);\n  } \n\n  // Get users repos\n  const getUserRepos = async (username) => {\n    setLoading(true);\n    //fetches data from the github api\n    const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${githubClientId}&client_secret=${githubClientSecret}`);\n    \n    // //the state will be set as soon as the data is received.\n    setRepos(res.data);\n    setLoading(false);\n  } \n\n  //clear users from state\n  const clearUsers = () => {\n    setUsers([]);\n    setLoading(false);\n  }\n\n  // set alert if nothing is typed\n  const showAlert = (msg, type) => {\n    setAlert({ msg, type})\n    // Timeout to remove alert message after five seconds\n    setTimeout(() => setAlert(null), 5000);\n  }\n\n    return (\n      <Router>\n      <div className=\"App\">\n        <NavBar />\n        <div className=\"container\">\n          <Alert alert={alert} />\n          <Switch>\n            <Route exact path='/' render={props => (\n              <Fragment>\n                <Search searchUsers={searchUsers} clearUsers={clearUsers} showClear={users.length > 0 ? true: false} setAlert={showAlert}/>\n                <Users loading={loading} users={users} />\n              </Fragment>\n                \n            )} \n          />\n          <Route exact path=\"/about\" component={About}></Route>\n          <Route exact path='/user/:login' render={props => (\n            <User {...props} getUser={getUser} getUserRepos={getUserRepos} user={user} repos={repos} loading={loading}/>\n          )} />\n        </Switch>\n        </div>\n      </div>\n  \n    </Router>\n    );\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}