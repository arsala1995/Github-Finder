{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/sher/lighthouse/postgrad/github-Finder/src/App.js\";\nimport React, { Component, Fragment } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport NavBar from './components/layout/NavBar';\nimport Users from './components/users/Users';\nimport User from './components/users/User';\nimport Search from './components/users/Search';\nimport Alert from './components/layout/Alert';\nimport './App.css';\nimport About from \"./components/pages/About\";\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      //initial states for users and loading\n      users: [],\n      user: {},\n      loading: false,\n      alert: null\n    };\n\n    this.searchUsers = async text => {\n      this.setState({\n        loading: true\n      }); //fetches data from the github api\n\n      const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_ID}`); // //the state will be set as soon as the data is received.\n\n      this.setState({\n        users: res.data.items,\n        loading: false\n      });\n    };\n\n    this.getUser = async username => {\n      this.setState({\n        loading: true\n      }); //fetches data from the github api\n\n      const res = await axios.get(`https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_ID}`); // //the state will be set as soon as the data is received.\n\n      this.setState({\n        user: res.data,\n        loading: false\n      });\n    };\n\n    this.clearUsers = () => {\n      this.setState({\n        users: [],\n        loading: false\n      });\n    };\n\n    this.setAlert = (msg, type) => {\n      this.setState({\n        alert: {\n          msg: msg,\n          type: type\n        }\n      }); // Timeout to remove alert message after five seconds\n\n      setTimeout(() => this.setState({\n        alert: null\n      }), 5000);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(Alert, {\n            alert: this.state.alert\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/\",\n              render: props => /*#__PURE__*/_jsxDEV(Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Search, {\n                  searchUsers: this.searchUsers,\n                  clearUsers: this.clearUsers,\n                  showClear: this.state.users.length > 0 ? true : false,\n                  setAlert: this.setAlert\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Users, {\n                  loading: this.state.loading,\n                  users: this.state.users\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/about\",\n              component: About\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/user/:login\",\n              render: props => /*#__PURE__*/_jsxDEV(User, { ...props,\n                getUser: this.getUser,\n                user: this.state.user\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/sher/lighthouse/postgrad/github-Finder/src/App.js"],"names":["React","Component","Fragment","BrowserRouter","Router","Switch","Route","NavBar","Users","User","Search","Alert","About","axios","App","state","users","user","loading","alert","searchUsers","text","setState","res","get","process","env","REACT_APP_GITHUB_CLIENT_ID","data","items","getUser","username","clearUsers","setAlert","msg","type","setTimeout","render","props","length"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport NavBar from './components/layout/NavBar'\nimport Users from './components/users/Users'\nimport User from './components/users/User'\nimport Search from './components/users/Search'\nimport Alert from './components/layout/Alert'\nimport './App.css';\nimport About from \"./components/pages/About\"\nimport axios from 'axios'\n\nclass App extends Component {\n  state = {\n    //initial states for users and loading\n    users: [],\n    user: {},\n    loading: false,\n    alert: null\n  }\n\n\n  //search github users function that is passed to search file as props\n  searchUsers = async (text) => {\n\n    this.setState({ loading: true });\n    //fetches data from the github api\n    const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_ID}`);\n    \n    // //the state will be set as soon as the data is received.\n    this.setState({ users: res.data.items, loading: false })\n  };\n\n  //Get single github user\n  getUser = async (username) => {\n    this.setState({ loading: true });\n    //fetches data from the github api\n    const res = await axios.get(`https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_ID}`);\n    \n    // //the state will be set as soon as the data is received.\n    this.setState({ user: res.data, loading: false })\n  } \n\n  //clear users from state\n  clearUsers = () => {\n    this.setState({ users: [], loading: false });\n  }\n\n  // set alert if nothing is typed\n  setAlert = (msg, type) => {\n    this.setState({ alert: {msg:msg, type:type } });\n\n    // Timeout to remove alert message after five seconds\n    setTimeout(() => this.setState({ alert: null}), 5000);\n  }\n\n  render() {\n    return (\n      <Router>\n      <div className=\"App\">\n        <NavBar />\n        <div className=\"container\">\n          <Alert alert={this.state.alert} />\n          <Switch>\n            <Route exact path='/' render={props => (\n              <Fragment>\n                <Search searchUsers={this.searchUsers} clearUsers={this.clearUsers} showClear={this.state.users.length > 0 ? true: false} setAlert={this.setAlert}/>\n                <Users loading={this.state.loading} users={this.state.users} />\n              </Fragment>\n                \n            )} \n          />\n          <Route exact path=\"/about\" component={About}></Route>\n          <Route exact path='/user/:login' render={props => (\n            <User {...props} getUser={this.getUser} user={this.state.user} />\n          )} />\n        </Switch>\n        </div>\n      </div>\n  \n    </Router>\n    );\n\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}