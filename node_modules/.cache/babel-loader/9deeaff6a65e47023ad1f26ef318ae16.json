{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/sher/lighthouse/postgrad/github-Finder/src/components/users/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Search = props => {\n  _s();\n\n  const [text, setText] = useState('');\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (text === '') {\n      props.setAlert('Please enter something', 'light');\n    } else {\n      props.searchUsers(text);\n      setText('');\n    }\n  };\n\n  const onChange = e => {\n    setText(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"text\",\n        placeholder: \"Search users..\",\n        value: text,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"search\",\n        className: \"btn btn-dark btn-block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), props.showClear && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-light btn-block\",\n      onClick: props.clearUsers,\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Search, \"M8VhbSOru85VOsk7T2j5DvKRp+M=\");\n\n_c = Search;\nSearch.proTypes = {\n  searchUsers: PropTypes.func.isRequired,\n  clearUsers: PropTypes.func.isRequired,\n  showClear: PropTypes.bool.isRequired,\n  setAlert: PropTypes.func.isRequired\n};\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/home/sher/lighthouse/postgrad/github-Finder/src/components/users/Search.js"],"names":["React","useState","PropTypes","Search","props","text","setText","onSubmit","e","preventDefault","setAlert","searchUsers","onChange","target","value","showClear","clearUsers","proTypes","func","isRequired","bool"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAGA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AAG1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;;AAGA,QAAMM,QAAQ,GAAIC,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAGJ,IAAI,KAAK,EAAZ,EAAiB;AACfD,MAAAA,KAAK,CAACM,QAAN,CAAe,wBAAf,EAAyC,OAAzC;AACD,KAFD,MAEO;AACLN,MAAAA,KAAK,CAACO,WAAN,CAAkBN,IAAlB;AACAC,MAAAA,OAAO,CAAC,EAAD,CAAP;AAED;AACF,GATD;;AAWA,QAAMM,QAAQ,GAAIJ,CAAD,IAAO;AACtBF,IAAAA,OAAO,CAAEE,CAAC,CAACK,MAAF,CAASC,KAAX,CAAP;AACD,GAFD;;AAKI,sBACE;AAAA,4BACE;AAAM,MAAA,QAAQ,EAAEP,QAAhB;AAA0B,MAAA,SAAS,EAAC,MAApC;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,MAAxB;AAA+B,QAAA,WAAW,EAAC,gBAA3C;AAA4D,QAAA,KAAK,EAAEF,IAAnE;AAAyE,QAAA,QAAQ,EAAEO;AAAnF;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,QAA3B;AAAoC,QAAA,SAAS,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAKGR,KAAK,CAACW,SAAN,iBAAmB;AAAQ,MAAA,SAAS,EAAC,yBAAlB;AAA4C,MAAA,OAAO,EAAEX,KAAK,CAACY,UAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALtB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUH,CAhCD;;GAAMb,M;;KAAAA,M;AAkCNA,MAAM,CAACc,QAAP,GAAkB;AAChBN,EAAAA,WAAW,EAAET,SAAS,CAACgB,IAAV,CAAeC,UADZ;AAEhBH,EAAAA,UAAU,EAAEd,SAAS,CAACgB,IAAV,CAAeC,UAFX;AAGhBJ,EAAAA,SAAS,EAAEb,SAAS,CAACkB,IAAV,CAAeD,UAHV;AAIhBT,EAAAA,QAAQ,EAAER,SAAS,CAACgB,IAAV,CAAeC;AAJT,CAAlB;AAOA,eAAehB,MAAf","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\n\nconst Search = (props) => {\n\n\nconst [text, setText] = useState('');\n\n\nconst onSubmit = (e) => {\n  e.preventDefault()\n  if(text === '' ) {\n    props.setAlert('Please enter something', 'light')\n  } else {\n    props.searchUsers(text);\n    setText('')\n\n  }\n}\n\nconst onChange = (e) => {\n  setText( e.target.value);\n}\n  \n\n    return (\n      <div>\n        <form onSubmit={onSubmit} className=\"form\">\n          <input type=\"text\" name=\"text\" placeholder=\"Search users..\" value={text} onChange={onChange}/>\n          <input type=\"submit\" value=\"search\" className=\"btn btn-dark btn-block\" />\n        </form >\n        {props.showClear && <button className=\"btn btn-light btn-block\" onClick={props.clearUsers}>Clear</button> }\n      </div>\n    )\n  \n}\n\nSearch.proTypes = {\n  searchUsers: PropTypes.func.isRequired,\n  clearUsers: PropTypes.func.isRequired,\n  showClear: PropTypes.bool.isRequired,\n  setAlert: PropTypes.func.isRequired\n}\n\nexport default Search\n"]},"metadata":{},"sourceType":"module"}