{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/sher/lighthouse/postgrad/github-Finder/src/components/users/User.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, Fragment } from 'react';\nimport Spinner from '../layout/Spinner';\nimport Repos from '../repos/Repos';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst User = props => {\n  _s();\n\n  //taking out the user data as soon as you press more on main page the api will be called and this page will fetch all the information as props and return them back.\n  useEffect(() => {\n    props.getUser(props.match.params.login);\n    props.getUserRepos(props.match.params.login);\n  }, []); //taking all the stuffs from api that are passed as props.\n\n  const {\n    name,\n    avatar_url,\n    location,\n    bio,\n    blog,\n    login,\n    html_url,\n    followers,\n    following,\n    public_repos,\n    public_gists,\n    hireable,\n    company\n  } = props.user;\n  if (props.loading) return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 30\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      className: \"btn btn-light\",\n      children: \"Back To Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), \"Hireable: \", ' ', hireable ? /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fas fa-check text-success\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fas fa-times-circle text-danger\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 65\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card grid-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"all-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: avatar_url,\n          className: \"round-img\",\n          alt: \"\",\n          style: {\n            width: '150px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Location: \", location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [bio && /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Bio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: bio\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: html_url,\n          className: \"btn btn-dark my-1\",\n          children: \"Visit Github Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: login && /*#__PURE__*/_jsxDEV(Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Username:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 17\n              }, this), \" \", login]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: company && /*#__PURE__*/_jsxDEV(Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Company:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 17\n              }, this), \" \", company]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: blog && /*#__PURE__*/_jsxDEV(Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Website:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 17\n              }, this), \" \", blog]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"badge badge-primary\",\n        children: [\"Followers: \", followers]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"badge badge-success\",\n        children: [\"Following: \", following]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"badge badge-light\",\n        children: [\"Public Repos: \", public_repos]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"badge badge-dark\",\n        children: [\"Public Gists: \", public_gists]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Repos, {\n      repos: props.repos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 12\n  }, this);\n};\n\n_s(User, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = User;\nUser.propTypes = {\n  loading: PropTypes.bool,\n  user: PropTypes.object.isRequired,\n  repos: PropTypes.array.isRequired,\n  getUser: PropTypes.func.isRequired,\n  getUSerRepos: PropTypes.func.isRequired\n};\nexport default User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["/home/sher/lighthouse/postgrad/github-Finder/src/components/users/User.js"],"names":["React","useEffect","Fragment","Spinner","Repos","PropTypes","Link","User","props","getUser","match","params","login","getUserRepos","name","avatar_url","location","bio","blog","html_url","followers","following","public_repos","public_gists","hireable","company","user","loading","width","repos","propTypes","bool","object","isRequired","array","func","getUSerRepos"],"mappings":"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","sourcesContent":["import React, { useEffect, Fragment } from 'react'\nimport Spinner from '../layout/Spinner'\nimport Repos from '../repos/Repos'\nimport PropTypes from 'prop-types'\nimport {Link} from 'react-router-dom'\n\nconst User = (props) => {\n  //taking out the user data as soon as you press more on main page the api will be called and this page will fetch all the information as props and return them back.\n  \n  useEffect(() => {\n    props.getUser(props.match.params.login)\n    props.getUserRepos(props.match.params.login)\n  }, [])\n\n \n    //taking all the stuffs from api that are passed as props.\n    const {name, avatar_url, location, bio, blog, login, html_url, followers, following, public_repos, public_gists, hireable, company } = props.user\n\n\n    if(props.loading) return <Spinner />;\n\n    return <Fragment>\n      <Link to='/' className='btn btn-light'>\n        Back To Search\n      </Link>\n      Hireable: {' '}\n      {hireable ? <i className='fas fa-check text-success' /> : <i className='fas fa-times-circle text-danger' /> }\n      <div className='card grid-2'>\n        <div className='all-center'>\n          <img src={avatar_url} className='round-img' alt='' style={{width: '150px'}} />\n        <h1>{name}</h1>\n        <p>Location: {location}</p>\n        </div>\n        <div>\n          {bio && (<Fragment>\n            <h3>Bio</h3>\n            <p>{bio}</p>\n          </Fragment>\n          )}\n          <a href={html_url} className='btn btn-dark my-1' >\n            Visit Github Profile\n          </a>\n          <ul>\n            <li>\n              {login && <Fragment>\n                <strong>Username:</strong> {login}  \n              </Fragment>}\n            </li>\n            <li>\n              {company && <Fragment>\n                <strong>Company:</strong> {company}  \n              </Fragment>}\n            </li>\n            <li>\n              {blog && <Fragment>\n                <strong>Website:</strong> {blog}  \n              </Fragment>}\n            </li>\n          </ul>\n        </div>\n      </div>\n\n      <div className='card text-center'>\n        <div className='badge badge-primary'>Followers: {followers}</div>\n        <div className='badge badge-success'>Following: {following}</div>\n        <div className='badge badge-light'>Public Repos: {public_repos}</div>\n        <div className='badge badge-dark'>Public Gists: {public_gists}</div>\n      </div>\n\n      <Repos repos={props.repos} />\n\n    </Fragment>\n        \n}\n\nUser.propTypes = {\n  loading: PropTypes.bool,\n  user: PropTypes.object.isRequired,\n  repos: PropTypes.array.isRequired,\n  getUser: PropTypes.func.isRequired,\n  getUSerRepos: PropTypes.func.isRequired\n}\n\nexport default User\n"]},"metadata":{},"sourceType":"module"}