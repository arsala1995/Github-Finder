{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useEffect,Fragment}from'react';import Spinner from'../layout/Spinner';import Repos from'../repos/Repos';import{Link}from'react-router-dom';var User=function User(props){//taking out the user data as soon as you press more on main page the api will be called and this page will fetch all the information as props and return them back.\nuseEffect(function(){props.getUser(props.match.params.login);props.getUserRepos(props.match.params.login);// eslint-disable-next-line\n},[]);//taking all the stuffs from api that are passed as props.\nvar _props$user=props.user,name=_props$user.name,avatar_url=_props$user.avatar_url,location=_props$user.location,bio=_props$user.bio,blog=_props$user.blog,login=_props$user.login,html_url=_props$user.html_url,followers=_props$user.followers,following=_props$user.following,public_repos=_props$user.public_repos,public_gists=_props$user.public_gists,hireable=_props$user.hireable,company=_props$user.company;if(props.loading)return/*#__PURE__*/_jsx(Spinner,{});return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(Link,{to:\"/\",className:\"btn btn-light\",children:\"Back To Search\"}),\"Hireable: \",' ',hireable?/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-check text-success\"}):/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-times-circle text-danger\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"card grid-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"all-center\",children:[/*#__PURE__*/_jsx(\"img\",{src:avatar_url,className:\"round-img\",alt:\"\",style:{width:'150px'}}),/*#__PURE__*/_jsx(\"h1\",{children:name}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Location: \",location]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[bio&&/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Bio\"}),/*#__PURE__*/_jsx(\"p\",{children:bio})]}),/*#__PURE__*/_jsx(\"a\",{href:html_url,className:\"btn btn-dark my-1\",children:\"Visit Github Profile\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:login&&/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Username:\"}),\" \",login]})}),/*#__PURE__*/_jsx(\"li\",{children:company&&/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Company:\"}),\" \",company]})}),/*#__PURE__*/_jsx(\"li\",{children:blog&&/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Website:\"}),\" \",blog]})})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card text-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"badge badge-primary\",children:[\"Followers: \",followers]}),/*#__PURE__*/_jsxs(\"div\",{className:\"badge badge-success\",children:[\"Following: \",following]}),/*#__PURE__*/_jsxs(\"div\",{className:\"badge badge-light\",children:[\"Public Repos: \",public_repos]}),/*#__PURE__*/_jsxs(\"div\",{className:\"badge badge-dark\",children:[\"Public Gists: \",public_gists]})]}),/*#__PURE__*/_jsx(Repos,{repos:props.repos})]});};export default User;","map":{"version":3,"sources":["/home/sher/lighthouse/postgrad/github-Finder/src/components/users/User.js"],"names":["React","useEffect","Fragment","Spinner","Repos","Link","User","props","getUser","match","params","login","getUserRepos","user","name","avatar_url","location","bio","blog","html_url","followers","following","public_repos","public_gists","hireable","company","loading","width","repos"],"mappings":"wFAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,MAAOC,CAAAA,KAAP,KAAkB,gBAAlB,CAEA,OAAQC,IAAR,KAAmB,kBAAnB,CAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAACC,KAAD,CAAW,CACtB;AAEAN,SAAS,CAAC,UAAM,CACdM,KAAK,CAACC,OAAN,CAAcD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,KAAjC,EACAJ,KAAK,CAACK,YAAN,CAAmBL,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,KAAtC,EACA;AACD,CAJQ,CAIN,EAJM,CAAT,CAOE;AAVoB,gBAWmHJ,KAAK,CAACM,IAXzH,CAWbC,IAXa,aAWbA,IAXa,CAWPC,UAXO,aAWPA,UAXO,CAWKC,QAXL,aAWKA,QAXL,CAWeC,GAXf,aAWeA,GAXf,CAWoBC,IAXpB,aAWoBA,IAXpB,CAW0BP,KAX1B,aAW0BA,KAX1B,CAWiCQ,QAXjC,aAWiCA,QAXjC,CAW2CC,SAX3C,aAW2CA,SAX3C,CAWsDC,SAXtD,aAWsDA,SAXtD,CAWiEC,YAXjE,aAWiEA,YAXjE,CAW+EC,YAX/E,aAW+EA,YAX/E,CAW6FC,QAX7F,aAW6FA,QAX7F,CAWuGC,OAXvG,aAWuGA,OAXvG,CAcpB,GAAGlB,KAAK,CAACmB,OAAT,CAAkB,mBAAO,KAAC,OAAD,IAAP,CAElB,mBAAO,MAAC,QAAD,yBACL,KAAC,IAAD,EAAM,EAAE,CAAC,GAAT,CAAa,SAAS,CAAC,eAAvB,4BADK,cAIM,GAJN,CAKJF,QAAQ,cAAG,UAAG,SAAS,CAAC,2BAAb,EAAH,cAAiD,UAAG,SAAS,CAAC,iCAAb,EALrD,cAML,aAAK,SAAS,CAAC,aAAf,wBACE,aAAK,SAAS,CAAC,YAAf,wBACE,YAAK,GAAG,CAAET,UAAV,CAAsB,SAAS,CAAC,WAAhC,CAA4C,GAAG,CAAC,EAAhD,CAAmD,KAAK,CAAE,CAACY,KAAK,CAAE,OAAR,CAA1D,EADF,cAEA,oBAAKb,IAAL,EAFA,cAGA,kCAAcE,QAAd,GAHA,GADF,cAME,uBACGC,GAAG,eAAK,MAAC,QAAD,yBACP,2BADO,cAEP,mBAAIA,GAAJ,EAFO,GADX,cAME,UAAG,IAAI,CAAEE,QAAT,CAAmB,SAAS,CAAC,mBAA7B,kCANF,cASE,mCACE,oBACGR,KAAK,eAAI,MAAC,QAAD,yBACR,qCADQ,KACoBA,KADpB,GADZ,EADF,cAME,oBACGc,OAAO,eAAI,MAAC,QAAD,yBACV,oCADU,KACiBA,OADjB,GADd,EANF,cAWE,oBACGP,IAAI,eAAI,MAAC,QAAD,yBACP,oCADO,KACoBA,IADpB,GADX,EAXF,GATF,GANF,GANK,cAyCL,aAAK,SAAS,CAAC,kBAAf,wBACE,aAAK,SAAS,CAAC,qBAAf,yBAAiDE,SAAjD,GADF,cAEE,aAAK,SAAS,CAAC,qBAAf,yBAAiDC,SAAjD,GAFF,cAGE,aAAK,SAAS,CAAC,mBAAf,4BAAkDC,YAAlD,GAHF,cAIE,aAAK,SAAS,CAAC,kBAAf,4BAAiDC,YAAjD,GAJF,GAzCK,cAgDL,KAAC,KAAD,EAAO,KAAK,CAAEhB,KAAK,CAACqB,KAApB,EAhDK,GAAP,CAoDH,CApED,CA8EA,cAAetB,CAAAA,IAAf","sourcesContent":["import React, { useEffect, Fragment } from 'react'\nimport Spinner from '../layout/Spinner'\nimport Repos from '../repos/Repos'\nimport PropTypes from 'prop-types'\nimport {Link} from 'react-router-dom'\n\nconst User = (props) => {\n  //taking out the user data as soon as you press more on main page the api will be called and this page will fetch all the information as props and return them back.\n  \n  useEffect(() => {\n    props.getUser(props.match.params.login)\n    props.getUserRepos(props.match.params.login);\n    // eslint-disable-next-line\n  }, [])\n\n \n    //taking all the stuffs from api that are passed as props.\n    const {name, avatar_url, location, bio, blog, login, html_url, followers, following, public_repos, public_gists, hireable, company } = props.user\n\n\n    if(props.loading) return <Spinner />;\n\n    return <Fragment>\n      <Link to='/' className='btn btn-light'>\n        Back To Search\n      </Link>\n      Hireable: {' '}\n      {hireable ? <i className='fas fa-check text-success' /> : <i className='fas fa-times-circle text-danger' /> }\n      <div className='card grid-2'>\n        <div className='all-center'>\n          <img src={avatar_url} className='round-img' alt='' style={{width: '150px'}} />\n        <h1>{name}</h1>\n        <p>Location: {location}</p>\n        </div>\n        <div>\n          {bio && (<Fragment>\n            <h3>Bio</h3>\n            <p>{bio}</p>\n          </Fragment>\n          )}\n          <a href={html_url} className='btn btn-dark my-1' >\n            Visit Github Profile\n          </a>\n          <ul>\n            <li>\n              {login && <Fragment>\n                <strong>Username:</strong> {login}  \n              </Fragment>}\n            </li>\n            <li>\n              {company && <Fragment>\n                <strong>Company:</strong> {company}  \n              </Fragment>}\n            </li>\n            <li>\n              {blog && <Fragment>\n                <strong>Website:</strong> {blog}  \n              </Fragment>}\n            </li>\n          </ul>\n        </div>\n      </div>\n\n      <div className='card text-center'>\n        <div className='badge badge-primary'>Followers: {followers}</div>\n        <div className='badge badge-success'>Following: {following}</div>\n        <div className='badge badge-light'>Public Repos: {public_repos}</div>\n        <div className='badge badge-dark'>Public Gists: {public_gists}</div>\n      </div>\n\n      <Repos repos={props.repos} />\n\n    </Fragment>\n        \n}\n\nUser.propTypes = {\n  loading: PropTypes.bool,\n  user: PropTypes.object.isRequired,\n  repos: PropTypes.array.isRequired,\n  getUser: PropTypes.func.isRequired,\n  getUSerRepos: PropTypes.func.isRequired\n}\n\nexport default User\n"]},"metadata":{},"sourceType":"module"}